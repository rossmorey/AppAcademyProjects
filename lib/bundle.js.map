{"version":3,"sources":["webpack:///webpack/bootstrap e5e758df881a99f80313","webpack:///./lib/asteroids.js","webpack:///./lib/game_view.js","webpack:///./lib/game.js","webpack:///./lib/asteroid.js","webpack:///./lib/utils.js","webpack:///./lib/moving_object.js","webpack:///./lib/ship.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;;;;;;ACRD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;;;;;;;ACxBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;ACxEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;AAIA;AACA;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;ACxCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap e5e758df881a99f80313\n **/","const GameView = require(\"./game_view.js\");\n\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n  // debugger\n  let canvas = document.getElementById(\"game-canvas\");\n  let ctx = canvas.getContext(\"2d\");\n  let gameview = new GameView(ctx);\n  gameview.start();\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/asteroids.js\n ** module id = 0\n ** module chunks = 0\n **/","const Game = require(\"./game.js\");\nfunction GameView (ctx) {\n  this.ctx = ctx;\n  this.game = new Game();\n}\n\nGameView.prototype.start = function () {\n  this.bindKeyHandlers();\n  setInterval(() => {\n    this.game.draw(this.ctx);\n    this.game.step();\n  }, 20);\n\n};\n\nGameView.prototype.bindKeyHandlers = function() {\n  window.key(\"w\", () => {\n    this.game.ship.power([0, -1]);\n  });\n  window.key(\"a\", () => this.game.ship.power([-1, 0]));\n  window.key(\"s\", () => this.game.ship.power([0, 1]));\n  window.key(\"d\", () => this.game.ship.power([1, 0]));\n};\n\nmodule.exports = GameView;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/game_view.js\n ** module id = 1\n ** module chunks = 0\n **/","const Asteroid = require(\"./asteroid.js\");\nconst Ship = require(\"./ship.js\");\nconst DIM_X = 1000;\nconst DIM_Y = 600;\nconst NUM_ASTEROIDS = 2;\n\nfunction Game() {\n  this.asteroids = [];\n  this.addAsteriods();\n  this.ship = new Ship(this);\n}\nGame.prototype.randomPosition = function () {\n  let x = Math.floor(Math.random() * DIM_X);\n  let y = Math.floor(Math.random() * DIM_Y);\n  return [x, y];\n};\n\nGame.prototype.addAsteriods = function() {\n  for (let idx = 0; idx < NUM_ASTEROIDS; idx++) {\n    let randompos = this.randomPosition();\n    let asteroid = new Asteroid(randompos, this);\n    this.asteroids.push(asteroid);\n  }\n};\n\nGame.prototype.draw = function (ctx) {\n  ctx.clearRect(0, 0, 1000, 600);\n  this.allObjects().forEach(function (el) {\n    el.draw(ctx);\n  });\n};\n\nGame.prototype.moveObjects = function () {\n  this.allObjects().forEach(function (el) {\n    el.move();\n  });\n};\nGame.prototype.wrap = function (pos) {\n  let [x, y] = pos;\n  if (y <= 0) {\n    return [x, 600];\n  } else if (y >= 600) {\n    return [x, 0];\n  } else if (x <= 0) {\n    return [1000, y];\n  } else if (x >= 1000) {\n    return [0, y];\n  } else {\n    return [x, y];\n  }\n};\n\nGame.prototype.checkCollisions = function () {\n  this.asteroids.forEach( (a1) => {\n    if (a1.isCollidedWith(this.ship)) {\n      this.ship.relocate();\n    }\n  });\n};\n\nGame.prototype.step = function () {\n  this.moveObjects();\n  this.checkCollisions();\n};\n\nGame.prototype.allObjects = function() {\n  return this.asteroids.concat(this.ship);\n};\n\nmodule.exports = Game;\n\n// let g = new Game();\n// g.addAsteriods();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/game.js\n ** module id = 2\n ** module chunks = 0\n **/","const Util = require(\"./utils.js\");\nconst MovingObject = require(\"./moving_object.js\");\n\nfunction Asteroid (pos, game) {\n  const COLOR = \"#00ffff\";\n  const RADIUS = 20;\n  let vel = Util.randomVec(10);\n\n  MovingObject.call(this, pos, vel, RADIUS, COLOR, game);\n}\n\n\n\nUtil.inherits(Asteroid, MovingObject);\nmodule.exports = Asteroid;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/asteroid.js\n ** module id = 3\n ** module chunks = 0\n **/","const Util = {\n  inherits (childClass, parentClass) {\n    function Surrogate () {}\n    Surrogate.prototype = parentClass.prototype;\n    childClass.prototype = new Surrogate;\n    childClass.prototype.constructor = childClass;\n  },\n\n  randomVec (length) {\n    let x = Math.random() * (2 * length) - length;\n    let pom = Math.floor(Math.random() * 2);\n    let y = Math.sqrt(Math.pow(length, 2) - Math.pow(x, 2));\n    if (pom === 1) {\n      y = -y;\n    }\n    return [x, y];\n  }\n};\n\nmodule.exports = Util;\n// console.log(Util.randomVec(10));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/utils.js\n ** module id = 4\n ** module chunks = 0\n **/","function MovingObject(pos, vel, radius, color, game) {\n  this.pos = pos;\n  this.vel = vel;\n  this.radius = radius;\n  this.color = color;\n  this.game = game;\n}\nMovingObject.prototype.draw = function(ctx) {\n  ctx.beginPath();\n  ctx.fillStyle = this.color;\n  let x = this.pos[0];\n  let y = this.pos[1];\n  ctx.arc(x, y, this.radius, 0, 2 * Math.PI, false);\n  ctx.fill();\n};\n\nMovingObject.prototype.move = function() {\n  this.pos = this.game.wrap(this.pos);\n  this.pos[0] += this.vel[0];\n  this.pos[1] += this.vel[1];\n};\n\nMovingObject.prototype.isCollidedWith = function (otherObject) {\n  let dx = this.pos[0] - otherObject.pos[0];\n  let dy = this.pos[1] - otherObject.pos[1];\n\n  let distance = Math.sqrt((Math.pow(dx, 2) + Math.pow(dy, 2)));\n\n  // debugger\n  if ((this.radius + otherObject.radius) > distance) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nmodule.exports = MovingObject;\n// \n// let a1 = new MovingObject([10,10], [0,0], 10);\n// let a2 = new MovingObject([19, 25], [0,0], 10);\n// console.log(a1.isCollidedWith(a2));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/moving_object.js\n ** module id = 5\n ** module chunks = 0\n **/","const MovingObject = require(\"./moving_object.js\");\nconst Utils = require(\"./utils.js\");\n\nfunction Ship (game) {\n  const RADIUS = 10;\n  const COLOR = \"#aa0000\";\n  this.game = game;\n  this.pos = game.randomPosition();\n  MovingObject.call(this, this.pos, [0,0], RADIUS, COLOR, game);\n}\nUtils.inherits(Ship, MovingObject);\n\nShip.prototype.relocate = function() {\n  this.pos = this.game.randomPosition();\n  this.vel = [0, 0];\n};\nShip.prototype.power = function(impulse) {\n  this.vel[0] += impulse[0];\n  this.vel[1] += impulse[1];\n\n  console.log(this.vel);\n};\nmodule.exports = Ship;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/ship.js\n ** module id = 6\n ** module chunks = 0\n **/"],"sourceRoot":""}